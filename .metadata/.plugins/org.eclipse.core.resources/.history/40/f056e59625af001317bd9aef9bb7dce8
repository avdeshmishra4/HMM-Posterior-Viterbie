package dishonestcasino;

public class HiddenMarkovModel {
	/*
	 * number of states that hidden markov model have
	 */
	public int numState;

	/*
	 * number of events in each state e.g. dice has 6 possible events from (1 to
	 * 6)
	 */
	public int eventSize;

	/*
	 * transition probability
	 */

	public double transProb[][];

	/*
	 * emission probability
	 */

	public double emissProb[][];

	

	/*
	 * probability of starting state
	 */

	public double iProb[];

	/*
	 * probability of end state
	 */

	public int getNumState() {
		return numState;
	}


	public void setNumState(int numState) {
		this.numState = numState;
	}


	public int getEventSize() {
		return eventSize;
	}


	public void setEventSize(int eventSize) {
		this.eventSize = eventSize;
	}


	public double[][] getTransProb() {
		return transProb;
	}


	public void setTransProb(double[][] transProb) {
		this.transProb = transProb;
	}


	public double[][] getEmissProb() {
		return emissProb;
	}


	public void setEmissProb(double[][] emissProb) {
		this.emissProb = emissProb;
	}


	public double[] getiProb() {
		return iProb;
	}


	public void setiProb(double[] iProb) {
		this.iProb = iProb;
	}


	public double[] geteProb() {
		return eProb;
	}


	public void seteProb(double[] eProb) {
		this.eProb = eProb;
	}


	public double eProb[];
	
	
	/*
	 * constructor for HiddenMarkovModel
	 */
	
	public HiddenMarkovModel(int numState, int eventSize) {

		this.numState = numState;
		this.eventSize = eventSize;
		iProb = new double[numState];
		eProb = new double[numState];
		transProb = new double[numState][numState];
		emissProb = new double[numState][eventSize];

	}

}
